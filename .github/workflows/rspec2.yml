# .github/workflows/rspec.yaml
name: CI
on:
  # Trigger the workflow on push or pull request,
  # but only for the master & development branch
  push:
    branches:
      - master
      - development
  pull_request:
    branches:
      - master
jobs:
  specs:
    name: RSpec
    runs-on: ubuntu-latest
    
    # If you need DB like PostgreSQL then define service below.
    # Example for Redis can be found here:
    # https://github.com/actions/example-services/tree/master/.github/workflows
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ""
          POSTGRES_DB: postgres
        ports:
        # will assign a random free host port
        - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    # https://help.github.com/en/articles/workflow-syntax-for-github-actions#jobsjob_idstrategymatrix
    strategy:
      fail-fast: false
      matrix:
        # Set N number of parallel jobs you want to run tests on.
        # Use higher number if you have slow tests to split them on more parallel jobs.
        # Remember to update ci_node_index below to 0..N-1
        ci_node_total: [5]
        # set N-1 indexes for parallel jobs
        # When you run 2 parallel jobs then first job will have index 0, the second job will have index 1 etc
        ci_node_index: [0, 1, 2, 3, 4]
    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.4.0
      with:
        access_token: ${{ github.token }}
    - uses: actions/checkout@v2
    - name: Set up Ruby 
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0.1
        
    - name: Set up node
      uses: actions/setup-node@v2
      with:
        node-version: '14'
        check-latest: true

    - name: Install yarn
      run: |
        wget -q -O - https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
        echo "deb https://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list
        apt-get update -yq
        apt-get -o dir::cache::archives="$APT_CACHE_DIR" install -y yarn
        yarn install
      
    # required to compile pg ruby gem
    - name: Install PostgreSQL client
      run: sudo apt-get install libpq-dev
    - name: Setup timezone
      uses: zcong1993/setup-timezone@master
      with:
        timezone: Europe/Dublin
    - name: Start Redis
      uses: supercharge/redis-github-action@1.1.0
      with:
        redis-version: 6
    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-new-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-new-gems-
    - name: Build and create DB
      env:
        # use localhost for the host here because we have specified a container for the job.
        # If we were running the job on the VM this would be postgres
        PGHOST: localhost
        PGUSER: postgres
        PGPORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
        RAILS_ENV: test
      run: |
        gem install bundler
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
        bin/rails db:setup
        bundle exec rails webpacker:compile
        
    - name: Run tests
      env:
        PGHOST: localhost
        PGUSER: postgres
        PGPORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
        RAILS_ENV: test
      run:
        bundle exec rspec
